# 목표
1. 모델을 만들어 데이터를 DB에 저장하고 템플릿에 템플릿 태그로 출력
2. 템플릿 태그와 템플릿 상속이 어떻게 이뤄지는지 이해
3. 데이터 업로드 및 이미지 업로드
4. 웹 서비스를 하나 만들어 검색이 가능하게 하겠습니다.

mkdir mysite
cd mysite
python -m venv venv

# 가상환경속으로 들어가기
.\venv\Scripts\activate # window
.\venv\Script\activate.bat # window
source ./venv/bin/activate # mac, linux

# window에서 오류가 뜰 경우
+ CategoryInfo          : 보안 오류: (:) [], PSSecurityException
+ FullyQualifiedErrorId : UnauthorizedAccess
# 이걸 입력해주세요.
Set-ExecutionPolicy Unrestricted

pip install django
django-admin startproject tutorialdjango .
python manage.py migrate
python manage.py runserver

# settings.py에서 접속할 수 있는 사람 설정
ALLOWED_HOSTS = ['*'] # 28번째 줄에 접속할 수 있는 사람을 모든 사람으로 변경

python manage.py startapp main
python manage.py startapp blog

# settings.py 에서 33번째 라인 수정
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'blog',
]

###################################
# urls 기획
1. 다음 url이 실제 작동하도록 해주세요.
1.1 ''
1.2 'blog/'
1.3 'blog/<int:pk>'
1.4 'blog/test'

###################################
앱이름: main    views 함수이름     html 파일이름    비고
''             index            index.html

앱이름: blog    views 함수이름   html 파일이름  비고
'blog/'         blog            blog.html    
'blog/<int:pk>' post            post.html
'blog/<int:pk>' test            test.html

* test라는 이름 자체를 사용하지 않기를 권합니다.
###################################
# tutorialdjango > urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('main.urls')),
    path('blog/', include('blog.urls')),
]

###################################
# main > urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.index, name='index'),
    path('about/', views.about, name='about'),
    path('contact/', views.contact, name='contact'),
]

###################################
# main > views.py
from django.shortcuts import render

def index(request):
    return render(request, 'main/index.html')

def about(request):
    return render(request, 'main/about.html')

def contact(request):
    return render(request, 'main/contact.html')

###################################
# templates 기본 폴더 변경합시다!

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        # .. 생략 ..
    },
]

# mysite > main > about.html
# mysite > main > index.html
# mysite > main > contact.html
# mysite > blog > blog.html # 어차피 만들 것이라 미리 생성하겠습니다.
# mysite > blog > post.html # 어차피 만들 것이라 미리 생성하겠습니다.

###################################
# blog > urls.py

from django.urls import path
from . import views

urlpatterns = [
    path('', views.blog, name='blog'),
    path('<int:pk>/', views.post, name='post'),
]

###################################
# blog > views.py
from django.shortcuts import render

def blog(request):
    return render(request, 'blog/blog.html')

def post(request, pk):
    return render(request, 'blog/post.html')

###################################

python manage.py runserver

# 모든 url 테스트해봅니다.
# http://127.0.0.1:8000
# http://127.0.0.1:8000/about/
# http://127.0.0.1:8000/blog/
# http://127.0.0.1:8000/blog/999


###################################
# 템플릿 태그, 템플릿 상속
## 템플릿 태그
{{ 변수명 }}
{% 템플릿 문법 %}

## 템플릿 상속
* 홈페이지를 조각내어 각각에 html로 관리하는 기법
* 부모 입장

... 위 코드 ...
{% block 이름 %}
{% endblock %}
... 아래 코드 ...

* 자식 입장

{% extends '부모html파일명' %}
{% block 이름 %}
... 실제 사용한 코드 ...
{% endblock %}