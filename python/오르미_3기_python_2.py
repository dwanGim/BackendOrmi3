# -*- coding: utf-8 -*-
"""오르미 3기_python_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PDXXlW0ELEBsQ2_2TFQD2RTyKSdyR_oF

# 연산과 구문

# 산술 연산자
"""

{'one':1} + {'two':2} # error
{5} + {6} # error

7 - 4

7 -- 4

7 --- 4

7 ---- 4

-2 * 2

-2 ** 2 # 주의 매우주의!

result = "Ha" * 3
print(result) # 결과: "HaHaHa"

result = [1, 2, 3] * 2
print(result) # 출력: [1, 2, 3, 1, 2, 3]

a = 10
b = 2
print(a / b) # 결과 5.0
print(a // b) # 결과 5 (JavaScript에서 //는 주석이라 이 연산이 없습니다.)

# python에 //는 몫이 아닙니다!
# 내림입니다!
a = -5
b = 2
print(a // b)

10 / 0 # ZeroDivisionError

10.123 // 1

-10.123 // 1

a = 10
b = 3
divide = a / b
print(f'{a} ÷ {b} = {divide:.2f}')  # 결과: 10 ÷ 3 = 3.33

a = 10
b = 3
divide = a / b
print(f'{a} ÷ {b} = {divide:.3f}')  # 결과: 10 ÷ 3 = 3.33

10 % 3.3

(100 % 33) / 10 # 소숫점 1자리까지 출력해야 한다

(1000 % 331) / 100 # 소숫점 1자리까지 출력해야 한다

10 % 0

5 == '5' # False

print('apple' < 'banana')

print('한' < '후')

print('apple' < 'applee')

print([10, 20, 30, 35] < [10, 20, 30, 40])

print([10, 20, 30] < [10, 20, 30, 40])
print([10, 20, 35] < [10, 20, 30, 40])

x = 10
5 < x < 15

x = 20
10 < x < 11

"""# 논리연산자"""

# and(곱), or(합), not(부정)
x = True # 1
y = False # 0

print(True and False) # False
print(True and True) # True
print(True or False) # True
print(True or True) # True

for i in range(101):
    if i % 3 == 0 and i % 5 == 0:
        print(i)

for i in range(101):
    if i % 3 == 0:
        if i % 5 == 0:
            print(i)

for i in range(101):
    if i % 3 == 0 and i % 5 == 0:
        print(i)

# https://codingdojang.com/scode/350?answer_mode=hide
for i in range(101):
    if i % 3 == 0 or i % 5 == 0:
        print(i)

print(not True)  # 결과: False
print(not False) # 결과: True

# 여기서부터는 나아가기 입니다.
a = True
b = False

a and b and ccc and ddd # 디버깅 할 때 조심

a = True
b = False

a or b or eee or fff

# 이건 왜 True이죠???
# 헷갈리시면 괄호 써주세요.
#                                                                   우선순위
# x OR y (또는 연산자)	    if x is FALSE, then y, else x	        1
# x AND y (그리고 연산자)	if x is FALSE, then x, else y	        2
# NOT x (부정 연산자)	    if x if FALSE, then True, else FALSE	3
a = True
b = False
c = False

a or b and c

a = True
b = False
c = False
d = True

a and b or c and d

a = True
b = False
c = False
d = True

a and not b or c and d
(a and (not b)) or (c and d)

# 단락회로평가
a = 'hello'
b = ''

a or b

# 단락회로평가
a = 'hello'
b = 'world'

a or b

# 단락회로평가
a = ''
b = 'world'

a or b

username = ''

username = username or '이름을 정하지 않았습니다.'
username

username = 'licat'

username = username or '이름을 정하지 않았습니다.'
username

# result = functionA() or functionB()
# 앞에 값이 None이나 0이 아니라면 뒤에 값으로 result를 만들겠다는 얘기입니다.

"""# 할당연산"""

x = 10
y = 20

x = x + 1

x += 1
x -= 1

x /= 1
x //= 1
x **= 1
x *= 1
x %= 1

"""# id 연산자, is 연산자, is not 연산자"""

a = 10000
b = 10000
a is b

id(a), id(b)

a = [1, 2, 3]
b = [1, 2, 3]
a is b

